[
  {
    "path": "posts/2023-01-19-overlaying-a-barplot-with-a-line-graph-in-base-r/",
    "title": "Overlaying a barplot with a line graph in base R",
    "description": "Creating a dual-axis, dual-element graph.",
    "author": [
      {
        "name": "Nathan L. Brouwer",
        "url": {}
      }
    ],
    "date": "2023-01-19",
    "categories": [
      "base R",
      "dataviz"
    ],
    "contents": "\n\n\n\nFigure 1: Foley & Faust (2010), Fig. 4\n\n\n\nA relatively common type of plot in wildlife ecology is a dual-axis graph representing some aspect of a population using one axis, like birth rate, and the second representing an aspect of the environment.\nThere are arguements for why such dual-axis plots are a poor choice for data viz, but I wanted to be able to show my students how to make them. I’ll use base R and lattice graphics in this post to demonstrate how to do this and perhaps try ggplot2 in the future.\nThe example shown above is from a paper on African elephants by Foley and Faust 2010. Called “Rapid population growth in an elephant Loxodonta africana population recovering from poaching in Tarangire National Park, Tanzania”, in the animal conservation journal Oryx.\nThe left axis shows the estimated number of conceptions in the population (determined by back-calculating from date of birth) and the right axis shows rainfall. It appears that elephant conception (and subsequent birth) is timed with the rains.\nI extracted the data from Figure 4 of Foley and Faust (2010) using [metaDigitise](https://cran.r-project.org/web/packages/metaDigitise/vignettes/metaDigitise.html.\nThe dataset is small and reproduced below:\n\n\nmonth.i   <- c( 1,  2, 3, 4, 5, 6, 7, 8, 9,10,11, 12)\nmonth.num <- c(11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19)\nmonth.name <- c(\"Nov\",  \"Dec\", \"Jan\", \"Feb\",\n                 \"Mar\",  \"Apr\", \"May\", \"Jun\",\n                 \"July\", \"Aug\", \"Sep\", \"Oct\")\nconceptions <- c(10, 42,34,18, 30, 55,68, 48,24,23,11,8)\nrainfall    <- c(60,100,95,78,130,160,58,  4, 3, 3, 2,18)\n\n\nEasy plot choice: side by side\nThe easiest way to display the data is in two side-by-side figures. I’ll use the function mtext() for the axes labels instead of the default locations.\n\n\npar(mfrow = c(1,2), mar = c(4,4,1,2))\nplot(conceptions ~ month.i, type = \"b\", xlab = \"\", \n     ylab = \"\", xaxt=\"n\", pch = 16, cex = 1.25)\nmtext(text = \"Month\", side = 1, line = 2.25, cex = 1.2)\nmtext(text = \"Conceptions\", side = 2, line = 2, cex = 1.2)\naxis(side = 1, at=1:12, labels=month.name)\n\nplot(rainfall ~ month.i, type = \"b\", xlab = \"\", ylab = \"\", \n     xaxt=\"n\", pch = 18, cex = 1.25)\nmtext(text = \"Month\", side = 1, line = 2, cex = 1.2)\nmtext(text = \"Rainfall\", side = 2, line = 2.25, cex = 1.2)\naxis(side = 1, at=1:12, labels=month.name)\n\n\n\nA dual axis graph\nA dual-axis plot can be made using lattice graphics. The code below was adapted from The R Graph Gallary: Dual Y axis in R.\nThie requires making make two separate plots\nA barplot using lattice::barplot()\nA line plot using lattice::xyplot, then overlay them.\nFirst, I need lattice and latticeExtra.\n\n\nlibrary(latticeExtra)\n\n\nI’ll bundle the data into a dataframe for convenience:\n\n\ndf <- data.frame(month.i, \n                 month.name, \n                 conceptions, \n                 rainfall)\n\n\nNow first, a barplot for the conceptions, stored in an object.\n\n\nconceptions <- barchart(conceptions ~ month.i, \n                 data = df, \n                 type = \"l\" , \n                horizontal = F,\n                 lwd=2, col=\"darkgrey\", \n                ylab = \"Conceptions (grey bars)\", \n                xlab = \"Month\", \n                main = \"Elephant conceptions vs. rainfall, Tarangire NP Tanzania\")\n\n\nThis looks nice enough:\n\n\nconceptions\n\n\n\nNow the rainfall data using xyplot.\n\n\nrainfall <- xyplot(rainfall ~ month.i, df, type = \"b\", lwd=3, cex = 2, pch = 18, \n               ylab = \"Rainfall (mm; blude triangles)\",\n               xlab = \"Conceptions\")\n\n\nThe plots are overlaid with dual axes using latticeExtra::doubleYScale\n\n\ndoubleYScale(conceptions, rainfall, \n             add.ylab2 = TRUE,\n             use.style=FALSE ,xlab = \"\")\n\n\n\nReferences\nFoley and Faust 2010. Called Rapid population growth in an elephant Loxodonta africana population recovering from poaching in Tarangire National Park, Tanzania. Oryx 44:205 - 212. https://doi.org/10.1017/S0030605309990706\n\n\n\n",
    "preview": "posts/2023-01-19-overlaying-a-barplot-with-a-line-graph-in-base-r/overlaying-a-barplot-with-a-line-graph-in-base-r_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2023-01-19T21:09:09-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2022-05-05-welcome-to-computational-biology-for-all/",
    "title": "Welcome to Computational Biology for All!",
    "description": "Welcome to my new blog, Computational Biology for All!",
    "author": [
      {
        "name": "Nathan L. Brouwer",
        "url": "https://www.linkedin.com/in/nathan-brouwer-phd-97100980/"
      }
    ],
    "date": "2022-05-05",
    "categories": [],
    "contents": "\n\n\n\nWelcome to Computational Biology for All. This blog is dedicated to introducing and explaining quantitative methods to biologists.\nTopics will include:\ndata science\nstatistical analysis\ndata visualization\ncomputational biology\nbioinformatics\nphylogenetics\nsimulation\n\n\n\n",
    "preview": "posts/2022-05-05-welcome-to-computational-biology-for-all/asciiworld.png",
    "last_modified": "2023-01-19T16:27:35-05:00",
    "input_file": {},
    "preview_width": 645,
    "preview_height": 427
  }
]
